buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// version code = api version(2) + app version(4) + build number(2)
def VERSION_CODE = 19020101
def VERSION_NAME = "2.1"
def PACKAGE_NAME = "com.sakurafish.parrot.callconfirm"

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 25
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode VERSION_CODE
        versionName VERSION_NAME
        applicationId PACKAGE_NAME
        manifestPlaceholders = [appName: "@string/app_name"]
        vectorDrawables.useSupportLibrary = true
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debug {
            storeFile file("../debug.keystore")
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            manifestPlaceholders = [appName: "@string/app_name_staging"]
        }
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        preDexLibraries = false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

ext {
    supportLibraryVersion = '25.4.0'
    firebaseVersion = '12.0.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:support-v4:${supportLibraryVersion}"
    implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    implementation "com.android.support:support-annotations:${supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${supportLibraryVersion}"
    implementation "com.google.firebase:firebase-ads:${firebaseVersion}"
    implementation 'com.github.navasmdc:MaterialDesign:1.5@aar'
    implementation 'com.patrickpissurno:ripple-effect:1.3.1'
    implementation 'uk.co.chrisjenx:calligraphy:2.2.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true
    }
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
}

// apkファイルの名前を変更
android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "ParrotCallConfirm_v${android.defaultConfig.versionName}" +
                "_vc${android.defaultConfig.versionCode}_${variant.name}.apk"
    }
}

// https://stackoverflow.com/a/45025597
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.4.0'
            }
        }
    }
}


apply plugin: 'com.google.gms.google-services'